// server.js
const express = require("express");
const cors = require("cors");

const app = express();

// âœ… Railway Ø¨ÙŠØ¯ÙŠ Ø¨ÙˆØ±Øª Ø¯ÙŠÙ†Ø§Ù…ÙŠÙƒÙŠ
const port = process.env.PORT || 5000;

app.use(cors());

// ðŸŸ¢ Ø¯Ø§ØªØ§ ÙˆÙ‡Ù…ÙŠØ© (15 ÙŠÙˆØ²Ø± Ù…Ø¹ Ø³ØªÙˆØ±ÙŠØ² Ù…ØªÙ†ÙˆØ¹Ø©)
const users = [
  // ... Ø§Ù„Ø¯Ø§ØªØ§ Ø²ÙŠ Ù…Ø§ Ù‡ÙŠ
];

// ðŸŸ¢ ÙƒÙ„ Ø§Ù„ÙŠÙˆØ²Ø±Ø² Ù…Ø¹ Ø§Ù„Ø³ØªÙˆØ±ÙŠØ²
app.get("/users", (req, res) => {
  res.json(users);
});

// ðŸŸ¢ Ù…ÙŠÙ† Ø¹Ù†Ø¯Ù‡ Ø³ØªÙˆØ±ÙŠØ²
app.get("/stories/users", (req, res) => {
  const result = users.map((u) => ({
    userId: u.userId,
    username: u.username,
    avatar: u.avatar,
    storiesCount: u.stories.length,
    lastStoryAt: u.stories[u.stories.length - 1]?.postedAt
  }));
  res.json(result);
});

// ðŸŸ¢ ÙƒÙ„ Ø§Ù„Ø³ØªÙˆØ±ÙŠØ² ÙƒÙ„Ù‡Ø§
app.get("/stories", (req, res) => {
  const allStories = users.flatMap((u) =>
    u.stories.map((s) => ({
      ...s,
      userId: u.userId,
      username: u.username,
      avatar: u.avatar
    }))
  );

  allStories.sort((a, b) => new Date(b.postedAt) - new Date(a.postedAt));

  res.json(allStories);
});

// ðŸŸ¢ Ø³ØªÙˆØ±ÙŠØ² ÙŠÙˆØ²Ø± Ù…Ø¹ÙŠÙ‘Ù†
app.get("/stories/user/:userId", (req, res) => {
  const { userId } = req.params;
  const user = users.find((u) => u.userId == userId);
  if (!user) return res.status(404).json({ error: "User not found" });
  res.json(user.stories);
});

// ðŸŸ¢ Ø³ØªÙˆØ±ÙŠ ÙˆØ§Ø­Ø¯Ø©
app.get("/stories/:storyId", (req, res) => {
  const { storyId } = req.params;
  let story = null;
  for (const u of users) {
    story = u.stories.find((s) => s.storyId == storyId);
    if (story) break;
  }
  if (!story) return res.status(404).json({ error: "Story not found" });
  res.json(story);
});

// âœ… Ù„Ø§Ø²Ù… Ø¯Ø§ ÙŠØ´ØªØºÙ„ Ø¨Ø§Ù„Ø¨ÙˆØ±Øª Ø¨ØªØ§Ø¹ Railway
app.listen(port, () => {
  console.log(`Dummy Stories API running on port ${port}`);
});
